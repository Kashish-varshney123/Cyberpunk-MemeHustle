{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kashi\\\\Desktop\\\\MemeHustle\\\\frontend\\\\src\\\\components\\\\Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './Leaderboard.cyberpunk.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = ({\n  open,\n  onClose\n}) => {\n  _s();\n  const [topMemes, setTopMemes] = useState([]);\n  const prevUpvotes = useRef({});\n  const prevRanks = useRef({});\n  const [flashMap, setFlashMap] = useState({});\n  const [rankChange, setRankChange] = useState({});\n  useEffect(() => {\n    if (!open) return;\n    const fetchLeaderboard = async () => {\n      const res = await fetch('http://localhost:5000/leaderboard?top=10');\n      const data = await res.json();\n      setTopMemes(data);\n    };\n    fetchLeaderboard();\n    // Poll every 3s for updates\n    const interval = setInterval(fetchLeaderboard, 3000);\n    return () => clearInterval(interval);\n  }, [open]);\n\n  // Animate upvote changes and rank changes\n  useEffect(() => {\n    const newFlashMap = {};\n    const newRankChange = {};\n    const idToRank = {};\n    topMemes.forEach((meme, idx) => {\n      idToRank[meme.id] = idx;\n      // Upvote flash\n      if (prevUpvotes.current[meme.id] !== undefined && prevUpvotes.current[meme.id] !== meme.upvotes) {\n        newFlashMap[meme.id] = true;\n        setTimeout(() => setFlashMap(fm => ({\n          ...fm,\n          [meme.id]: false\n        })), 500);\n      }\n      // Rank change\n      const prevRank = prevRanks.current[meme.id];\n      if (prevRank !== undefined && prevRank !== idx) {\n        newRankChange[meme.id] = prevRank > idx ? 'up' : 'down';\n        setTimeout(() => setRankChange(rc => ({\n          ...rc,\n          [meme.id]: undefined\n        })), 1200);\n      }\n    });\n    setFlashMap(newFlashMap);\n    setRankChange(newRankChange);\n    // Update prev refs\n    topMemes.forEach((meme, idx) => {\n      prevUpvotes.current[meme.id] = meme.upvotes;\n      prevRanks.current[meme.id] = idx;\n    });\n  }, [topMemes]);\n  if (!open) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-modal-cyberpunk\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl text-neon-green glitch mb-4 text-center\",\n        children: \"\\uD83D\\uDD25 Meme Leaderboard \\uD83D\\uDD25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"space-y-2\",\n        children: topMemes.map((meme, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `flex items-center gap-4 neon-border p-2 rounded transition-all duration-300 ${rankChange[meme.id] === 'up' ? 'leaderboard-up' : rankChange[meme.id] === 'down' ? 'leaderboard-down' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-neon-green text-xl font-mono\",\n            children: [\"#\", i + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: meme.image_url,\n            alt: meme.title,\n            className: \"w-12 h-12 object-cover rounded neon-shadow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-neon-green font-bold glitch\",\n              children: meme.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-400\",\n              children: [\"Upvotes: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-neon-green font-mono${flashMap[meme.id] ? ' neon-flash' : ''}`,\n                children: meme.upvotes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, meme.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"m/kJ5ca3sI5o5R3/6iFy64mCD4I=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Leaderboard","open","onClose","_s","topMemes","setTopMemes","prevUpvotes","prevRanks","flashMap","setFlashMap","rankChange","setRankChange","fetchLeaderboard","res","fetch","data","json","interval","setInterval","clearInterval","newFlashMap","newRankChange","idToRank","forEach","meme","idx","id","current","undefined","upvotes","setTimeout","fm","prevRank","rc","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","i","src","image_url","alt","title","_c","$RefreshReg$"],"sources":["C:/Users/kashi/Desktop/MemeHustle/frontend/src/components/Leaderboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './Leaderboard.cyberpunk.css';\n\nconst Leaderboard = ({ open, onClose }) => {\n  const [topMemes, setTopMemes] = useState([]);\n  const prevUpvotes = useRef({});\n  const prevRanks = useRef({});\n  const [flashMap, setFlashMap] = useState({});\n  const [rankChange, setRankChange] = useState({});\n\n  useEffect(() => {\n    if (!open) return;\n    const fetchLeaderboard = async () => {\n      const res = await fetch('http://localhost:5000/leaderboard?top=10');\n      const data = await res.json();\n      setTopMemes(data);\n    };\n    fetchLeaderboard();\n    // Poll every 3s for updates\n    const interval = setInterval(fetchLeaderboard, 3000);\n    return () => clearInterval(interval);\n  }, [open]);\n\n  // Animate upvote changes and rank changes\n  useEffect(() => {\n    const newFlashMap = {};\n    const newRankChange = {};\n    const idToRank = {};\n    topMemes.forEach((meme, idx) => {\n      idToRank[meme.id] = idx;\n      // Upvote flash\n      if (prevUpvotes.current[meme.id] !== undefined && prevUpvotes.current[meme.id] !== meme.upvotes) {\n        newFlashMap[meme.id] = true;\n        setTimeout(() => setFlashMap(fm => ({ ...fm, [meme.id]: false })), 500);\n      }\n      // Rank change\n      const prevRank = prevRanks.current[meme.id];\n      if (prevRank !== undefined && prevRank !== idx) {\n        newRankChange[meme.id] = prevRank > idx ? 'up' : 'down';\n        setTimeout(() => setRankChange(rc => ({ ...rc, [meme.id]: undefined })), 1200);\n      }\n    });\n    setFlashMap(newFlashMap);\n    setRankChange(newRankChange);\n    // Update prev refs\n    topMemes.forEach((meme, idx) => {\n      prevUpvotes.current[meme.id] = meme.upvotes;\n      prevRanks.current[meme.id] = idx;\n    });\n  }, [topMemes]);\n\n  if (!open) return null;\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50\">\n      <div className=\"leaderboard-modal-cyberpunk\">\n        <button className=\"close-btn\" onClick={onClose}>Ã—</button>\n        <h2 className=\"text-2xl text-neon-green glitch mb-4 text-center\">ðŸ”¥ Meme Leaderboard ðŸ”¥</h2>\n        <ol className=\"space-y-2\">\n          {topMemes.map((meme, i) => (\n            <li\n              key={meme.id}\n              className={`flex items-center gap-4 neon-border p-2 rounded transition-all duration-300 ${\n                rankChange[meme.id] === 'up'\n                  ? 'leaderboard-up'\n                  : rankChange[meme.id] === 'down'\n                  ? 'leaderboard-down'\n                  : ''\n              }`}\n            >\n              <span className=\"text-neon-green text-xl font-mono\">#{i + 1}</span>\n              <img src={meme.image_url} alt={meme.title} className=\"w-12 h-12 object-cover rounded neon-shadow\" />\n              <div className=\"flex-1\">\n                <div className=\"text-neon-green font-bold glitch\">{meme.title}</div>\n                <div className=\"text-xs text-gray-400\">\n                  Upvotes: <span className={`text-neon-green font-mono${flashMap[meme.id] ? ' neon-flash' : ''}`}>{meme.upvotes}</span>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}